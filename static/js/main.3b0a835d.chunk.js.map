{"version":3,"sources":["catSale.js","index.js"],"names":["Cat","sale","useState","cat","setCat","randomPrice","Math","floor","random","useEffect","className","map","img","index","src","url","Basket","storedCart","cart","setCart","type","onClick","push","value","splice","deleteHandler","App","setSale","loading","setLoading","error","message","setError","getter","a","fetch","response","status","Error","json","data","Home","About","User","Checkout","to","path","ReactDOM","render","document","getElementById"],"mappings":"0NA4GMA,EAAM,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACV,EAAqBC,mBAAS,IAA9B,mBAAOC,EAAP,KAAWC,EAAX,KAIMC,EAAc,WAEhB,OADYC,KAAKC,MAAoB,IAAdD,KAAKE,WAWhC,OANAC,qBAAU,WARNL,EAAOH,KAUT,IACFQ,qBAAU,WACNJ,MACF,IACEF,GAGAF,EAIA,qBAAKS,UAAU,OAAf,SACKP,EAAIQ,KAAI,SAACC,EAAIC,GACd,OACI,gCACA,qBAAiBC,IAAKF,EAAIG,KAAhBF,GACV,6CAAaR,OACb,2DAZD,MAoBTW,EAAS,SAAC,GAAiB,EAAhBC,WAAiB,IAC9B,EAAwBf,mBAAS,IAAjC,mBAAOgB,EAAP,KAAaC,EAAb,KAWJ,OACI,gCACA,wCACA,wBAAQC,KAAK,SAASC,QAbH,WACf,IAAIJ,EAAU,YAAOC,GACrBD,EAAWK,KAAKH,GAChBA,EAAQF,IAUZ,eACCC,GACDA,EAAKP,KAAI,SAACE,GACN,OAAQ,qBAAiBU,MAAQ,OAAzB,SACR,wBAAQF,QAAW,kBAZD,SAACR,GACnB,IAAII,EAAU,YAAOC,GACrBD,EAAWO,OAAOX,EAAM,GACxBM,EAAQF,GASiBQ,CAAcZ,IAAvC,gBADkBA,UASXa,EAlKH,WACR,MAAuBxB,mBAAS,IAAhC,mBAAOD,EAAP,KAAY0B,EAAZ,KACA,EAA6BzB,oBAAS,GAAtC,mBAAO0B,EAAP,KAAeC,EAAf,KACA,EAAyB3B,mBAAS,CAC9B4B,OAAM,EACNC,QAAQ,KAFZ,mBAAOD,EAAP,KAAaE,EAAb,KAIMC,EAAM,uCAAG,8BAAAC,EAAA,sEAEXL,GAAW,GAFA,SAGYM,MAAM,uDAHlB,UAIY,OADjBC,EAHK,QAICC,OAJD,sBAKL,IAAIC,MAAM,eALL,uBAOQF,EAASG,OAPjB,OAOLC,EAPK,OAQXb,EAAQa,GACRX,GAAW,GATA,kDAWXG,EAAS,CAACF,OAAM,EAAKC,QAAQ,KAAMA,UAXxB,0DAAH,qDAkBZ,GAHAtB,qBAAU,WACNwB,MACF,KACEhC,GAAQ2B,EACR,OAAO,4CAEX,GAAGE,EAAMA,MACL,OAAO,6BAAKA,EAAMC,UAEtB,SAASU,IACL,OAAO,oBAAI/B,UAAU,SAAd,kBAGX,SAASgC,IACL,OAAO,oBAAIhC,UAAU,SAAd,mBAGX,SAASiC,IACL,OACA,sBAAKjC,UAAU,OAAf,UACA,oBAAIA,UAAU,SAAd,2BACA,cAAC,EAAD,CAAKT,KAAMA,OAIf,SAAS2C,IACL,OACI,8BACA,cAAC,EAAD,CAAQ1B,KAAMjB,MAItB,OACI,8BACI,8BACA,cAAC,IAAD,UACR,gCACI,qBAAKS,UAAU,SAAf,SACA,+BACI,6BACA,cAAC,IAAD,CAAMmC,GAAG,IAAT,oBAEA,6BACA,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEA,6BACA,cAAC,IAAD,CAAMA,GAAG,QAAT,6BAEA,6BACI,cAAC,IAAD,CAAMA,GAAG,YAAT,2BAIR,eAAC,IAAD,WACA,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACI,cAACJ,EAAD,MAEJ,cAAC,IAAD,CAAOI,KAAK,QAAZ,SACI,cAACH,EAAD,MAEJ,cAAC,IAAD,CAAOG,KAAK,YAAZ,SACI,cAACF,EAAD,MAEJ,cAAC,IAAD,CAAOE,KAAK,IAAZ,SACI,cAACL,EAAD,mBC5FZM,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.3b0a835d.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport React from \"react\";\nimport {\nBrowserRouter as Router,\nSwitch,\nRoute,\nLink\n} from \"react-router-dom\";\n\n\nconst App = () =>{\n    const [sale,setSale] = useState(\"\")\n    const [loading,setLoading] = useState(false)\n    const [error,setError] = useState({\n        error:false,\n        message:\"\"\n    })\n    const getter = async() =>{\n        try{\n        setLoading(true)\n        const response = await fetch(\"https://api.thecatapi.com/v1/images/search?limit=10\")\n        if(response.status !== 200){\n        throw new Error(\"not working\")\n        }\n        const data = await response.json()\n        setSale(data)\n        setLoading(false)\n        }catch (error) {\n        setError({error:true,message:error.message})\n        }\n        \n    }\n    useEffect(()=>{\n        getter()\n    },[])\n    if(!sale || loading){\n        return <h1>loading...</h1>\n    }\n    if(error.error){\n        return <h1>{error.message}</h1>\n    }\n    function Home() {\n        return <h1 className=\"header\">Home</h1>;\n    }\n    \n    function About() {\n        return <h1 className=\"header\">About</h1>;\n    }\n    \n    function User() {\n        return (\n        <div className=\"cats\">\n        <h1 className=\"header\">Cats For Sale</h1>\n        <Cat sale={sale}/>\n    </div>\n    )\n    }\n    function Checkout(){\n        return(\n            <div>\n            <Basket cart={sale}/>\n            </div>\n        )\n    }\n    return(\n        <div>\n            <div>\n            <Router>\n    <div>\n        <nav className=\"navbar\">\n        <ul>\n            <li>\n            <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n            <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n            <Link to=\"/User\">Cats for sale</Link>\n            </li>\n            <li>\n                <Link to=\"/checkout\">Basket</Link>\n            </li>\n        </ul>\n        </nav>\n        <Switch>\n        <Route path=\"/about\">\n            <About />\n        </Route>\n        <Route path=\"/User\">\n            <User />\n        </Route>\n        <Route path=\"/checkout\">\n            <Checkout />\n        </Route>\n        <Route path=\"/\">\n            <Home />\n        </Route>\n        </Switch>\n        \n    </div>\n    </Router>\n        </div>\n    </div>\n    )\n}\n\nconst Cat = ({sale}) => {\n    const [cat,setCat] = useState(\"\")\n    const catS=()=>{\n        setCat(sale)\n    }\n    const randomPrice = () =>{\n        let price = Math.floor(Math.random()*200)\n        return(\n            price\n        )\n    }\n    useEffect(()=>{\n        catS()\n    },[])\n    useEffect(()=>{\n        randomPrice()\n    },[])\n    if(!cat){\n        return null\n    }\n    if(!sale){\n        return null\n    }\n    return(\n        <div className=\"catt\">\n            {cat.map((img,index)=>{\n            return( \n                <div>\n                <img key={index} src={img.url}/>\n                <h2>Price: Â£{randomPrice(index)}</h2>\n                <button>Add to basket</button>\n                </div>\n            )\n            })} \n        </div>\n    )\n}\n\nconst Basket = ({storedCart}) => {\n    const [cart, setCart] = useState([])\n    const addHandler = () =>{\n        let storedCart = [...cart]\n        storedCart.push(setCart)\n        setCart(storedCart)\n    }\n    const deleteHandler = (index) =>{\n        let storedCart = [...cart]\n        storedCart.splice(index,1)\n        setCart(storedCart)\n    }\nreturn(\n    <div>\n    <h1>Basket</h1>\n    <button type=\"button\" onClick = {addHandler}>+</button>\n    {cart && \n    cart.map((index) =>{\n        return (<div key={index} value = \"item\">\n        <button onClick = {() => deleteHandler(index)}>-</button>\n        </div>)\n    })}\n    </div> )\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './catSale';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n\n"],"sourceRoot":""}